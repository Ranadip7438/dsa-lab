#include <stdio.h>
#include <stdlib.h>


struct Node {
    int data;
    struct Node* next;
};

struct Node* head = NULL;


void insertEnd(int value) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = value;

    if (head == NULL) {
        head = newNode;
        newNode->next = head;
        return;
    }

    struct Node* temp = head;
    while (temp->next != head)
        temp = temp->next;

    temp->next = newNode;
    newNode->next = head;
}


void insertBeginning(int value) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = value;

    if (head == NULL) {
        head = newNode;
        newNode->next = head;
        return;
    }

    struct Node* temp = head;
    while (temp->next != head)
        temp = temp->next;

    temp->next = newNode;
    newNode->next = head;
    head = newNode;
}


void deleteNode(int value) {
    if (head == NULL) {
        printf("List is empty.\n");
        return;
    }

    struct Node *curr = head, *prev = NULL;

 
    if (head->data == value) {
        if (head->next == head) {
            free(head);
            head = NULL;
            return;
        }

       
        struct Node* temp = head;
        while (temp->next != head)
            temp = temp->next;

        temp->next = head->next;
        struct Node* toDelete = head;
        head = head->next;
        free(toDelete);
        return;
    }

    prev = head;
    curr = head->next;
    while (curr != head && curr->data != value) {
        prev = curr;
        curr = curr->next;
    }

    if (curr == head) {
        printf("Value not found in the list.\n");
        return;
    }

    prev->next = curr->next;
    free(curr);
}


void display() {
    if (head == NULL) {
        printf("List is empty.\n");
        return;
    }

    struct Node* temp = head;
    printf("Circular Linked List: ");
    do {
        printf("%d -> ", temp->data);
        temp = temp->next;
    } while (temp != head);
    printf("(back to head)\n");
}


int main() {
    insertEnd(10);
    insertEnd(20);
    insertEnd(30);
    display();

    insertBeginning(5);
    display();

    deleteNode(20);
    display();

    deleteNode(5);
    display();

    deleteNode(100);  
    display();

    return 0;
}
